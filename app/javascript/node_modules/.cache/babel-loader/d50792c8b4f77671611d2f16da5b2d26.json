{"ast":null,"code":"var _jsxFileName = \"/Users/Jonny/Development/Personal/dandd-app/app/javascript/src/components/Roller.js\";\nimport React, { useState } from \"react\";\nimport Roll from \"./Roll\";\n\nconst Roller = () => {\n  const [rolls, setRolls] = useState([]);\n  const [diceAmount, setDiceAmount] = useState(1);\n  const [modifier, setModifier] = useState(0); // Rolls stored as objects with roll value and modifier value, if present\n\n  const rollCalc = sides => {\n    return 1 + Math.floor(Math.random() * sides);\n  };\n\n  const rollDice = sides => {\n    // let stringBlock = diceAmount + \"d\" + sides + \": \";\n    let rollsArr = [];\n\n    for (let i = 0; i < diceAmount; i++) {\n      rollsArr.push(rollCalc(sides)); //   i == diceAmount - 1\n      //     ? (stringBlock += rolls[i])\n      //     : (stringBlock += rolls[i] + \" + \");\n    }\n\n    console.log(rollsArr);\n    setRolls([{\n      key: rolls.length + 1,\n      sides: sides,\n      rolls: rollsArr,\n      amount: parseInt(diceAmount),\n      modifier: parseInt(modifier)\n    }, ...rolls]);\n    setModifier(0);\n  }; // if # of dice is greater than 1, loop through number of dice\n  // let (i = 0; i < diceAmount; i++){\n  // setRolls([\n  //   {\n  //     key: rolls.length + 1,\n  //     sides: sides,\n  //     roll: 1 + Math.floor(Math.random() * sides + modifier),\n  //     modifier: modifier,\n  //   },\n  //   ...rolls,\n  // ])\n  // }\n  // diceAmount > 0\n  //   ? setRolls([\n  //     {\n  //       key: rolls.length + 1,\n  //       sides: sides,\n  //       roll: []\n  //     }\n  //   ])\n  // const handleSidesChange = (event) => {\n  //   setSides(event.target.value)\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Dice Number:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: diceAmount,\n    onChange: e => setDiceAmount(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => rollDice(4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"d4\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(6),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"d6\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(8),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"d8\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(10),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"d10\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(12),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"d12\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(20),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"d20\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Modifier:\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setRolls([]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Clear Rolls\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: modifier,\n    onChange: e => setModifier(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.scrollbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, rolls.map(roll => {\n    return /*#__PURE__*/React.createElement(Roll, {\n      key: roll.key,\n      rolls: roll.rolls,\n      amount: roll.amount,\n      modifier: roll.modifier,\n      sides: roll.sides,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    });\n  }))));\n};\n\nconst styles = {\n  scrollbox: {\n    display: \"flex\",\n    overflow: \"scroll\",\n    margin: \"auto\",\n    justifyContent: \"center\",\n    border: \"black 1px solid\",\n    width: \"200px\"\n  }\n};\nexport default Roller;","map":{"version":3,"sources":["/Users/Jonny/Development/Personal/dandd-app/app/javascript/src/components/Roller.js"],"names":["React","useState","Roll","Roller","rolls","setRolls","diceAmount","setDiceAmount","modifier","setModifier","rollCalc","sides","Math","floor","random","rollDice","rollsArr","i","push","console","log","key","length","amount","parseInt","e","target","value","styles","scrollbox","map","roll","display","overflow","margin","justifyContent","border","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC,CAHmB,CAKnB;;AACA,QAAMS,QAAQ,GAAIC,KAAD,IAAW;AAC1B,WAAO,IAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,KAA3B,CAAX;AACD,GAFD;;AAGA,QAAMI,QAAQ,GAAIJ,KAAD,IAAW;AAC1B;AACA,QAAIK,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,UAApB,EAAgCW,CAAC,EAAjC,EAAqC;AACnCD,MAAAA,QAAQ,CAACE,IAAT,CAAcR,QAAQ,CAACC,KAAD,CAAtB,EADmC,CAErC;AACA;AACA;AACC;;AACDQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAX,IAAAA,QAAQ,CAAC,CACP;AACEgB,MAAAA,GAAG,EAAEjB,KAAK,CAACkB,MAAN,GAAe,CADtB;AAEEX,MAAAA,KAAK,EAAEA,KAFT;AAGEP,MAAAA,KAAK,EAAEY,QAHT;AAIEO,MAAAA,MAAM,EAAEC,QAAQ,CAAClB,UAAD,CAJlB;AAKEE,MAAAA,QAAQ,EAAEgB,QAAQ,CAAChB,QAAD;AALpB,KADO,EAQP,GAAGJ,KARI,CAAD,CAAR;AAUAK,IAAAA,WAAW,CAAC,CAAD,CAAX;AACD,GArBD,CATmB,CAgCnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAEH,UAFT;AAGE,IAAA,QAAQ,EAAGmB,CAAD,IAAOlB,aAAa,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAOE;AAAQ,IAAA,OAAO,EAAGF,CAAD,IAAOV,QAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,eAQE;AAAQ,IAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARF,eASE;AAAQ,IAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATF,eAUE;AAAQ,IAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,EAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAVF,eAWE;AAAQ,IAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,EAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXF,eAYE;AAAQ,IAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,EAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdF,eAeE;AAAQ,IAAA,OAAO,EAAE,MAAMV,QAAQ,CAAC,EAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAfF,eAgBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAEG,QAFT;AAGE,IAAA,QAAQ,EAAGiB,CAAD,IAAOhB,WAAW,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAqBE;AAAK,IAAA,KAAK,EAAEC,MAAM,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzB,KAAK,CAAC0B,GAAN,CAAWC,IAAD,IAAU;AACnB,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACV,GADZ;AAEE,MAAA,KAAK,EAAEU,IAAI,CAAC3B,KAFd;AAGE,MAAA,MAAM,EAAE2B,IAAI,CAACR,MAHf;AAIE,MAAA,QAAQ,EAAEQ,IAAI,CAACvB,QAJjB;AAKE,MAAA,KAAK,EAAEuB,IAAI,CAACpB,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVA,CADH,CADF,CArBF,CADF;AAuCD,CA/FD;;AAiGA,MAAMiB,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTG,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,QAAQ,EAAE,QAFD;AAGTC,IAAAA,MAAM,EAAE,MAHC;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,MAAM,EAAE,iBALC;AAMTC,IAAAA,KAAK,EAAE;AANE;AADE,CAAf;AAWA,eAAelC,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Roll from \"./Roll\";\n\nconst Roller = () => {\n  const [rolls, setRolls] = useState([]);\n  const [diceAmount, setDiceAmount] = useState(1);\n  const [modifier, setModifier] = useState(0);\n\n  // Rolls stored as objects with roll value and modifier value, if present\n  const rollCalc = (sides) => {\n    return 1 + Math.floor(Math.random() * sides);\n  };\n  const rollDice = (sides) => {\n    // let stringBlock = diceAmount + \"d\" + sides + \": \";\n    let rollsArr = [];\n    for (let i = 0; i < diceAmount; i++) {\n      rollsArr.push(rollCalc(sides));\n    //   i == diceAmount - 1\n    //     ? (stringBlock += rolls[i])\n    //     : (stringBlock += rolls[i] + \" + \");\n    }\n    console.log(rollsArr)\n    setRolls([\n      {\n        key: rolls.length + 1,\n        sides: sides,\n        rolls: rollsArr,\n        amount: parseInt(diceAmount),\n        modifier: parseInt(modifier),\n      },\n      ...rolls,\n    ]);\n    setModifier(0);\n  };\n\n  // if # of dice is greater than 1, loop through number of dice\n  // let (i = 0; i < diceAmount; i++){\n  // setRolls([\n  //   {\n  //     key: rolls.length + 1,\n  //     sides: sides,\n  //     roll: 1 + Math.floor(Math.random() * sides + modifier),\n  //     modifier: modifier,\n  //   },\n  //   ...rolls,\n  // ])\n  // }\n  // diceAmount > 0\n  //   ? setRolls([\n  //     {\n  //       key: rolls.length + 1,\n  //       sides: sides,\n  //       roll: []\n  //     }\n  //   ])\n\n  // const handleSidesChange = (event) => {\n  //   setSides(event.target.value)\n  // }\n  return (\n    <div>\n      <label>Dice Number:</label>\n      <input\n        type=\"number\"\n        value={diceAmount}\n        onChange={(e) => setDiceAmount(e.target.value)}\n      />\n      <button onClick={(e) => rollDice(4)}>d4</button>\n      <button onClick={() => rollDice(6)}>d6</button>\n      <button onClick={() => rollDice(8)}>d8</button>\n      <button onClick={() => rollDice(10)}>d10</button>\n      <button onClick={() => rollDice(12)}>d12</button>\n      <button onClick={() => rollDice(20)}>d20</button>\n      <br></br>\n      <label>Modifier:</label>\n      <button onClick={() => setRolls([])}>Clear Rolls</button>\n      <input\n        type=\"number\"\n        value={modifier}\n        onChange={(e) => setModifier(e.target.value)}\n      />\n      <div style={styles.scrollbox}>\n        <div>\n          {rolls.map((roll) => {\n            return (\n              <Roll\n                key={roll.key}\n                rolls={roll.rolls}\n                amount={roll.amount}\n                modifier={roll.modifier}\n                sides={roll.sides}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  scrollbox: {\n    display: \"flex\",\n    overflow: \"scroll\",\n    margin: \"auto\",\n    justifyContent: \"center\",\n    border: \"black 1px solid\",\n    width: \"200px\",\n  },\n};\n\nexport default Roller;\n"]},"metadata":{},"sourceType":"module"}