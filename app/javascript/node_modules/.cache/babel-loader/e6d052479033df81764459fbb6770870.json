{"ast":null,"code":"var _jsxFileName = \"/Users/Jonny/Development/Personal/dandd-app/app/javascript/src/components/Roller.js\";\nimport React, { useState } from \"react\";\nimport Roll from \"./Roll\";\n\nconst Roller = () => {\n  const [rolls, setRolls] = useState([]);\n  const [diceAmount, setDiceAmount] = useState(1);\n  const [modifier, setModifier] = useState(0); // Rolls stored as objects with roll value and modifier value, if present\n\n  const rollDice = sides => {\n    modifier !== 0 ? setRolls([...rolls, {\n      key: rolls.length + 1,\n      sides: sides,\n      roll: 1 + Math.floor(Math.random() * sides + modifier),\n      modifier: modifier\n    }]) : setRolls([...rolls, {\n      key: rolls.length + 1,\n      sides: sides,\n      roll: 1 + Math.floor(Math.random() * sides),\n      modifier: null\n    }]);\n    setModifier(0);\n  };\n\n  const addModifier = (roll, modifier) => {\n    return roll + modifier;\n  }; // const handleSidesChange = (event) => {\n  //   setSides(event.target.value)\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Dice Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: diceAmount,\n    onChange: e => setDiceAmount(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => rollDice(4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"d4\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(6),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"d6\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(8),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"d8\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(10),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"d10\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(12),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"d12\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(20),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"d20\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Modifier:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: modifier,\n    onChange: e => setModifier(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setRolls([]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Clear Rolls\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: styles.scrollbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, rolls.map(roll => {\n    return /*#__PURE__*/React.createElement(Roll, {\n      key: roll.key,\n      roll: roll.roll,\n      modifier: roll.modifier,\n      sides: roll.sides,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nconst styles = {\n  scrollbox: {\n    display: 'flex',\n    overflow: 'scroll'\n  }\n};\nexport default Roller;","map":{"version":3,"sources":["/Users/Jonny/Development/Personal/dandd-app/app/javascript/src/components/Roller.js"],"names":["React","useState","Roll","Roller","rolls","setRolls","diceAmount","setDiceAmount","modifier","setModifier","rollDice","sides","key","length","roll","Math","floor","random","addModifier","e","target","value","styles","scrollbox","map","display","overflow"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Roll from \"./Roll\";\n\nconst Roller = () => {\n  const [rolls, setRolls] = useState([]);\n  const [diceAmount, setDiceAmount] = useState(1);\n  const [modifier, setModifier] = useState(0);\n\n  // Rolls stored as objects with roll value and modifier value, if present\n  const rollDice = (sides) => {\n    modifier !== 0\n      ? setRolls([\n          ...rolls,\n          {\n            key: rolls.length + 1,\n            sides: sides,\n            roll: 1 + Math.floor(Math.random() * sides + modifier),\n            modifier: modifier,\n          },\n        ])\n      : setRolls([\n          ...rolls,\n          {\n            key: rolls.length + 1,\n            sides: sides,\n            roll: 1 + Math.floor(Math.random() * sides),\n            modifier: null,\n          },\n        ]);\n    setModifier(0);\n  };\n\n  const addModifier = (roll, modifier) => {\n    return roll + modifier;\n  };\n\n  // const handleSidesChange = (event) => {\n  //   setSides(event.target.value)\n  // }\n  return (\n    <div>\n      <label>Dice Number</label>\n      <input\n        type=\"number\"\n        value={diceAmount}\n        onChange={(e) => setDiceAmount(e.target.value)}\n      />\n      <button onClick={(e) => rollDice(4)}>d4</button>\n      <button onClick={() => rollDice(6)}>d6</button>\n      <button onClick={() => rollDice(8)}>d8</button>\n      <button onClick={() => rollDice(10)}>d10</button>\n      <button onClick={() => rollDice(12)}>d12</button>\n      <button onClick={() => rollDice(20)}>d20</button>\n      <br></br>\n      <label>Modifier:</label>\n      <input\n        type=\"number\"\n        value={modifier}\n        onChange={(e) => setModifier(e.target.value)}\n      />\n      <button onClick={() => setRolls([])}>Clear Rolls</button>\n      <ul style={styles.scrollbox}>\n        {rolls.map((roll) => {\n          return (\n            <Roll\n              key={roll.key}\n              roll={roll.roll}\n              modifier={roll.modifier}\n              sides={roll.sides}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\n\nconst styles = {\n  scrollbox: {\n    display: 'flex',\n    overflow: 'scroll',\n  },\n}\n\nexport default Roller;\n"]},"metadata":{},"sourceType":"module"}