{"ast":null,"code":"var _jsxFileName = \"/Users/Jonny/Development/Personal/dandd-app/src/components/Roller.js\";\nimport React, { useState } from 'react';\n\nconst Roller = () => {\n  const [rolls, setRolls] = useState([]);\n  const [sides, setSides] = useState(0);\n\n  const rollDice = () => {\n    console.log(sides);\n    setRolls([...rolls, 1 + Math.floor(Math.random() * sides)]);\n  };\n\n  const handleSidesChange = event => {\n    setSides(event.target.value);\n  };\n\n  const displayRolls = () => {\n    rolls.map(roll => {\n      if (roll === 1) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            color: red\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 16\n          }\n        }, roll);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: sides,\n    onChange: event => setSides(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: rollDice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Roll!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), displayRolls());\n};\n\nexport default Roller;","map":{"version":3,"sources":["/Users/Jonny/Development/Personal/dandd-app/src/components/Roller.js"],"names":["React","useState","Roller","rolls","setRolls","sides","setSides","rollDice","console","log","Math","floor","random","handleSidesChange","event","target","value","displayRolls","map","roll","color","red"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMM,QAAQ,GAAG,MAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAD,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW,IAAIO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,KAA3B,CAAf,CAAD,CAAR;AACD,GAHD;;AAKA,QAAMQ,iBAAiB,GAAIC,KAAD,IAAW;AACnCR,IAAAA,QAAQ,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBd,IAAAA,KAAK,CAACe,GAAN,CAAUC,IAAI,IAAI;AAChB,UAAIA,IAAI,KAAK,CAAb,EAAe;AACb,4BAAO;AAAG,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAACC;AAAP,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwBF,IAAxB,CAAP;AACD;AACF,KAJD;AAKD,GAND;;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAEd,KAA5B;AAAmC,IAAA,QAAQ,EAAES,KAAK,IAAIR,QAAQ,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,OAAO,EAAET,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIGU,YAAY,EAJf,CADF;AAQD,CA7BD;;AA+BA,eAAef,MAAf","sourcesContent":["import React, {useState} from 'react'\n\nconst Roller = () => {\n  const [rolls, setRolls] = useState([])\n  const [sides, setSides] = useState(0)\n  \n  const rollDice = () => {\n    console.log(sides)\n    setRolls([...rolls, 1 + Math.floor(Math.random() * sides)])\n  }\n\n  const handleSidesChange = (event) => {\n    setSides(event.target.value)\n  }\n\n  const displayRolls = () => {\n    rolls.map(roll => {\n      if (roll === 1){\n        return <p style={{color:red}}>{roll}</p>\n      }\n    })\n  }\n  \n  return(\n    <div>\n      <input type='number' value={sides} onChange={event => setSides(event.target.value)}></input>\n      <button onClick={rollDice}>Roll!</button>\n      <br></br>\n      {displayRolls()}\n    </div>\n  )\n}\n\nexport default Roller"]},"metadata":{},"sourceType":"module"}