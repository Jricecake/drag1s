{"ast":null,"code":"var _jsxFileName = \"/Users/Jonny/Development/Personal/dandd-app/src/components/Roller.js\";\nimport React, { useState } from \"react\";\nimport Roll from \"./Roll\";\n\nconst Roller = () => {\n  const [rolls, setRolls] = useState([]);\n  const [modifier, setModifier] = useState(0); // Rolls stored as objects with roll value and modifier value, if present\n\n  const rollDice = sides => {\n    console.log(sides);\n    modifier !== 0 ? setRolls([...rolls, {\n      key: rolls.length + 1,\n      sides: sides,\n      roll: 1 + Math.floor(Math.random() * sides + modifier),\n      modifier: modifier\n    }]) : setRolls([...rolls, {\n      key: rolls.length + 1,\n      sides: sides,\n      roll: 1 + Math.floor(Math.random() * sides),\n      modifier: null\n    }]);\n    setModifier(0);\n  };\n\n  const addModifier = (roll, modifier) => {\n    return roll + modifier;\n  }; // const handleSidesChange = (event) => {\n  //   setSides(event.target.value)\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"d4\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(6),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"d6\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(8),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"d8\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(10),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"d10\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(12),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"d12\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(20),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"d20\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: modifier,\n    onChange: e => setModifier(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), rolls.map(roll => {\n    return /*#__PURE__*/React.createElement(Roll, {\n      key: roll.key,\n      roll: roll.roll,\n      modifier: roll.modifier,\n      sides: roll.sides,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nexport default Roller;","map":{"version":3,"sources":["/Users/Jonny/Development/Personal/dandd-app/src/components/Roller.js"],"names":["React","useState","Roll","Roller","rolls","setRolls","modifier","setModifier","rollDice","sides","console","log","key","length","roll","Math","floor","random","addModifier","e","target","value","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Roll from \"./Roll\";\n\nconst Roller = () => {\n  const [rolls, setRolls] = useState([]);\n  const [modifier, setModifier] = useState(0);\n\n  // Rolls stored as objects with roll value and modifier value, if present\n  const rollDice = (sides) => {\n    console.log(sides);\n    modifier !== 0\n      ? setRolls([\n          ...rolls,\n          {\n            key: rolls.length + 1,\n            sides: sides,\n            roll: 1 + Math.floor(Math.random() * sides + modifier),\n            modifier: modifier,\n          },\n        ])\n      : setRolls([\n          ...rolls,\n          {\n            key: rolls.length + 1,\n            sides: sides,\n            roll: 1 + Math.floor(Math.random() * sides),\n            modifier: null,\n          },\n        ]);\n    setModifier(0);\n  };\n\n  const addModifier = (roll, modifier) => {\n    return roll + modifier;\n  };\n\n  // const handleSidesChange = (event) => {\n  //   setSides(event.target.value)\n  // }\n  return (\n    <div>\n      <button onClick={() => rollDice(4)}>d4</button>\n      <button onClick={() => rollDice(6)}>d6</button>\n      <button onClick={() => rollDice(8)}>d8</button>\n      <button onClick={() => rollDice(10)}>d10</button>\n      <button onClick={() => rollDice(12)}>d12</button>\n      <button onClick={() => rollDice(20)}>d20</button>\n      <br></br>\n      <input\n        type=\"number\"\n        value={modifier}\n        onChange={(e) => setModifier(e.target.value)}\n      />\n      {rolls.map((roll) => {\n        return (\n          <Roll key={roll.key} roll={roll.roll} modifier={roll.modifier} sides={roll.sides}/>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Roller;\n"]},"metadata":{},"sourceType":"module"}