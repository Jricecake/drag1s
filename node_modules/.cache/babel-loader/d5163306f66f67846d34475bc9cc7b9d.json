{"ast":null,"code":"var _jsxFileName = \"/Users/Jonny/Development/Personal/dandd-app/src/components/Roller.js\";\nimport React, { useState } from 'react';\n\nconst Roller = () => {\n  const [rolls, setRolls] = useState([]);\n  const [modifier, setModifier] = useState(0); // Rolls stored as objects with roll value and modifier value, if present\n\n  const rollDice = sides => {\n    console.log(sides);\n    modifier !== 0 ? setRolls([...rolls, {\n      roll: 1 + Math.floor(Math.random() * sides + modifier),\n      modifier: parseInt(modifier)\n    }]) : setRolls([...rolls, {\n      roll: 1 + Math.floor(Math.random() * sides),\n      modifier: null\n    }]);\n    setModifier(0);\n  };\n\n  const addModifier = (roll, modifier) => {\n    return roll + modifier;\n  }; // const handleSidesChange = (event) => {\n  //   setSides(event.target.value)\n  // }\n\n\n  const displayRolls = () => {\n    return rolls.map(roll => {\n      if (roll === 1) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 14\n          }\n        }, roll, \" + \", parseInt(modifier), \" = \", roll + modifier);\n      }\n\n      if (roll === 20) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            color: 'green'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 16\n          }\n        }, roll, \" + \", modifier, \" = \", roll + modifier);\n      } else {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 16\n          }\n        }, roll, \" + \", modifier, \" = \", roll + modifier);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"d4\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(6),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"d6\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(8),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"d8\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(10),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"d10\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(12),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"d12\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rollDice(20),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"d20\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: modifier,\n    onChange: e => setModifier(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), displayRolls());\n};\n\nexport default Roller;","map":{"version":3,"sources":["/Users/Jonny/Development/Personal/dandd-app/src/components/Roller.js"],"names":["React","useState","Roller","rolls","setRolls","modifier","setModifier","rollDice","sides","console","log","roll","Math","floor","random","parseInt","addModifier","displayRolls","map","color","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nconst Roller = () => {\n  const [rolls, setRolls] = useState([])\n  const [modifier, setModifier] = useState(0)\n  \n\n// Rolls stored as objects with roll value and modifier value, if present\n  const rollDice = (sides) => {\n    console.log(sides)\n    modifier !== 0 ?\n    setRolls([...rolls, {roll: (1 + Math.floor(Math.random() * sides + modifier)), modifier: parseInt(modifier)}]) : setRolls([...rolls, {roll: (1 + Math.floor(Math.random() * sides)), modifier: null}])\n    setModifier(0)\n  }\n\n  const addModifier = (roll, modifier) => {\n    return roll + modifier\n  }\n\n  // const handleSidesChange = (event) => {\n  //   setSides(event.target.value)\n  // }\n\n  const displayRolls = () => {\n    return rolls.map(roll => {\n      if (roll === 1){\n      return <p style={{color:'red'}}>{roll} + {parseInt(modifier)} = {(roll + modifier)}</p>\n      }\n      if (roll === 20){\n        return <p style={{color:'green'}}>{roll} + {modifier} = {(roll + modifier)}</p>\n      } \n      else {\n        return <p>{roll} + {modifier} = {(roll + modifier)}</p>\n      }\n    })\n  }\n  \n  return(\n    <div>\n      <button onClick={() => rollDice(4)}>d4</button>\n      <button onClick={() => rollDice(6)}>d6</button>\n      <button onClick={() => rollDice(8)}>d8</button>\n      <button onClick={() => rollDice(10)}>d10</button>\n      <button onClick={() => rollDice(12)}>d12</button>\n      <button onClick={() => rollDice(20)}>d20</button>\n      <br></br>\n      <input type='number' value={modifier} onChange={e => setModifier(e.target.value)}/>\n      {displayRolls()}\n    </div>\n  )\n}\n\nexport default Roller"]},"metadata":{},"sourceType":"module"}